{"name":"Texture Optimization","tagline":"Implementation of \"Texture Optimization for Example-based Synthesis\" by Vivek Kwatra et al.","body":"Overview\r\n====================\r\nSome texture synthesis...\r\n\r\nThe article implemented in this project can be found [here](http://www.cc.gatech.edu/cpl/projects/textureoptimization/TO-final.pdf).\r\n\r\nThe following output images were obtained after 50 iterations:\r\n\r\n![Radishes input](https://github.com/arthur-flam/textureOptimization/blob/master/input/radishes_sc_scale.bmp?raw=true)\r\n\r\n![Radishes output](https://github.com/arthur-flam/textureOptimization/blob/master/output/input/radishes_sc_scale.bmp?raw=true)\r\n\r\n\r\n## Try it ##\r\n\r\nYou can generate a single image:\r\n```sh\r\ncmake . && make && ./DisplayImage input/ztext.bmp\r\n```\r\n\r\nOr all of them\r\n```sh\r\n./test.sh\r\n```\r\n\r\n## Not done ##\r\n\r\n- the authors use a *memory efficient kd-tree*: they only record the position of the source and recover more info as needed.\r\n- we should *compute the kdtree only once* per scale level, but I ran into odd segfaults errors as I tried...\r\n- we don't compute origin patches for pixels on the edges. Nothing being done, it's very messy... We should get rid of those *edge issues* with some padding.\r\n- we should remove the OpenNL dependency: our energy minimization consists only of weighted averages...\r\n\r\n## Comparaison with original paper ##\r\n\r\n* This implementation searches for similar patches using color information, not just intensity information.\r\n* Performance needs some *tuning*: long-distance repetitive structures are not as nicely captured as in the paper. Tuning the initial scale should be enough to fix this.\r\n* Flow-controled synthesis is not covered.\r\n\r\n## Dependencies ##\r\n* cmake\r\n* [opencv](http://docs.opencv.org/doc/tutorials/introduction/linux_install/linux_install.html)\r\n","google":"UA-42364112-3","note":"Don't delete this file! It's used internally to help with page regeneration."}